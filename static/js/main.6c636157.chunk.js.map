{"version":3,"sources":["components/Navbar/Navbar.jsx","components/About/About.jsx","components/Portfolio/Fade.jsx","components/Portfolio/Portfolio.jsx","components/Contact/Contact.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["NavbarPage","Navbar","bg","expand","Brand","href","src","width","height","className","alt","rounded","Toggle","aria-controls","Collapse","id","Nav","Link","About","Figure","Image","fluid","FadeExample","React","Component","Portfolio","Contact","class","for","type","placeholder","rows","Footer","App","basename","process","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c636157.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\n\n\nconst NavbarPage = () => {\n    return (\n        <Navbar bg=\"black\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Crystal's Portfolio\n        <img\n        src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/src/components/Navbar/meme.png?raw=true\"\n        width=\"50\"\n        height=\"50\"\n        className=\"d-inline-block align-top\"\n        alt=\"Crystal logo\"\n        rounded=\"true\"\n      />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/about\">About</Nav.Link>\n            <Nav.Link href=\"/portfolio\">Portfolio</Nav.Link>\n            <Nav.Link href=\"/contact\">Contact</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n};\n\nexport default NavbarPage;","import React from \"react\";\nimport { Figure } from \"react-bootstrap\";\nimport \"./About.css\";\n\nconst About = () => {\n  return (\n    <div className=\"row mt-5\">\n      <div className=\" col-sm-12 jumbotron\">\n        <h1 className=\"about-me\">About Me</h1>\n        <hr className=\"my-4\" />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\">\n              <Figure>\n                <Figure.Image\n                  id=\"about-me-pic\"\n                  src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/public/Images/about-me.png?raw=true\"\n                  alt=\"Crystal Watkins\"\n                  fluid\n                />\n              </Figure>\n            </div>\n            <div className=\"col-sm-9\">\n              <section>\n                <p id=\"portfolio-text1\">\n                  My name is Crystal Watkins and I am a graduate of the full stack flex program \n                  through Georgia Tech as of August 2020. I have a background in sales and logistics\n                  having managed teams of up to 140 people. I'm also a former college athlete having \n                  gotten the chance to play tennis at Florida Southern College. I am a hard working, team\n                  player who is excited to continue to learn and develop skills in the field. I am fluent in \n                  React, Javascript, JQuery, Front End Development, MySQL, and MongoDB. Please see all contact \n                  information below and previous projects under the Portfolio tab!\n                </p>\n                <p>Cell: 404-276-4570</p>\n                <p>Email: crystalwatkins428@gmail.com </p>\n                <a className=\"links\" href=\"https://github.com/CrystalWatkins\">\n                  Github Portfolio\n                </a>\n                <br></br>\n                <a className=\"links\" href=\"CrystalWatkinsResume.pdf\">\n                  Resume\n                </a>\n                <br></br>\n                <a\n                  className=\"links\"\n                  href=\"https://www.linkedin.com/in/crystalwatkins1/\"\n                >\n                  LinkedIn\n                </a>\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport Fade from 'react-reveal/Fade';\n\nclass FadeExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Fade>\n          {/* <p>Description: </p> \n          <p>Technology Used: </p> \n          <p>Website: </p> \n          <p>Github Repo: </p>  */}\n        </Fade>\n      </div>\n    );\n  }\n}\n\nexport default FadeExample;","import React from \"react\";\nimport { Figure } from \"react-bootstrap\";\nimport \"./Portfolio.css\";\nimport Fade from \"./Fade\";\n\nconst Portfolio = () => {\n  return (\n    <div className=\"row mt-5\">\n      <div className=\"jumbotron\">\n        <h1 className=\"portfolio\">Portfolio</h1>\n        <hr className=\"my-4\" />\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <Figure>\n              <Figure.Image\n                className=\"portfolio-pic\"\n                src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/public/Images/DonenDusted.png?raw=true\"\n                alt=\"Done n Dusted\"\n                rounded\n                fluid\n              />\n              <Fade />\n              <figcaption>Done n Dusted</figcaption>\n              <p>\n                Description: Once you log on to our app, you can upload a\n                receipt from any store. You will then receive an itemized list\n                of your purchases that you can edit and take on your next trip\n                to the store!\n              </p>\n              <p>\n                Technology: Veryfi API, dbdiagram.io, Sketch, Materializecss,\n                NPM packages: express, express-handlebars, passport, mysql 2,\n                express-session, bcrypt, @handlebars/allow-prototype-access,\n                Sequelize, MVC, CRUD{\" \"}\n              </p>\n              <a href=\"https://fathomless-sands-26873.herokuapp.com/\">\n                Deployed Website\n              </a>\n              <br></br>\n              <a href=\"https://github.com/CrystalWatkins/grocr-receipt-app\">\n                Github Repo\n              </a>\n            </Figure>\n          </div>\n          <div className=\"col-sm-6\">\n            <Figure>\n              <Figure.Image\n                className=\"portfolio-pic\"\n                src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/public/Images/EmployeeMngmt.png?raw=true\"\n                rounded\n                alt=\"Employee Summary\"\n                fluid\n              />\n              <Fade />\n              <figcaption>Object Oriented Program Employee Summary</figcaption>\n              <p>\n                Description: This is a homework requirement for GT Full Stack\n                Flex Program. This node express is designed to create a webpage\n                when you fill out a prompt of questions through the terminal. It\n                will ask you multiple questions that you will answer for who is\n                working in your office and their information. Then it will be\n                created or updated under the Output Folder as team.html where\n                the page is created based on the office input!{\" \"}\n              </p>\n              <p>Technology: Node express, HTML tests, javascript</p>\n              <a href=\"https://crystalwatkins.github.io/gt-hw-object-oriented-programming-employee-summary/\">\n                Deployed Website\n              </a>\n              <br></br>\n              <a href=\"https://github.com/CrystalWatkins/gt-hw-object-oriented-programming-employee-summary\">\n                Github Repo\n              </a>\n            </Figure>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <Figure>\n              <Figure.Image\n                className=\"portfolio-pic\"\n                src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/public/Images/Project1.png?raw=true\"\n                rounded\n                alt=\"Remote island\"\n                fluid\n              />\n              <Fade />\n              <figcaption>Remote Island</figcaption>\n              <p>\n                Description: Remote Island allows a user to choose a travel\n                destination from a list of options.  Once a location type is\n                selected, the user will be presented with their travel\n                amenities.  Through the use of API’s, the user will view a\n                livestream video, pulled from a location similar to\n                location-type they selected.  The user will also be presented\n                with  a random drink, and optional recipe.  Lastly, the user\n                will be presented with current weather information in relation\n                to location selected.{\" \"}\n              </p>\n              <p>\n                Technology: OpenWeather API and CocktailDB API, HTML, CSS,\n                Bootstrap for customized styling, and Javascript/jQuery to\n                create dynamic web page. Images from Freepik. Google fonts.\n              </p>\n              <a href=\"https://crystalwatkins.github.io/gt-project-1/\">\n                Deployed Website\n              </a>\n              <br></br>\n              <a href=\"https://github.com/CrystalWatkins/gt-project-1\">\n                Github Repo\n              </a>\n            </Figure>\n          </div>\n          <div className=\"col-sm-6\">\n            <Figure>\n              <Figure.Image\n                className=\"portfolio-pic\"\n                src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/public/Images/mysqlemployee.png?raw=true\"\n                rounded\n                alt=\"Employee Tracker\"\n                fluid\n              />\n              <Fade />\n              <figcaption> My SQL Employee Tracker</figcaption>\n              <p>\n                Description: This mySQL webpage is designed to create an\n                employee database that combines three different tables to be\n                manipulated and changed by the user for the specific needs of a\n                company. You can assign an employee to a different department,\n                get information about specific data within your company, add\n                different aspects to the company and delete employee\n                information.\n              </p>\n              <p>Technology: mySQL and Javascript</p>\n              <a href=\"https://drive.google.com/file/d/1Xy5LKlEEk7d3nxKSND_KHRTo8ax-7uxZ/view\">\n                Video Demonstration\n              </a>\n              <br></br>\n              <a href=\"https://github.com/CrystalWatkins/gt-hw-my-sql-employee-tracker\">\n                Github Repo\n              </a>\n            </Figure>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <Figure>\n              <Figure.Image\n                className=\"portfolio-pic\"\n                src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/public/Images/burger.png?raw=true\"\n                rounded\n                alt=\"Burger App\"\n              />\n              <figcaption>Burger App</figcaption>\n              <Fade />\n              <p>\n                Description: This is a homework requirement for GT Full Stack\n                Flex Program. This node express burger app and webpage is\n                designed to utilize server side rendering using MVC. By using\n                handlebars we were asked to create a directory structure for\n                this homework which was followed exactly as asked. When you open\n                the website, you are able to see burgers pop up. You can then\n                add a burger that you want to eat. It will then put it in the\n                \"Burgers To Be Eaten\" column, where you can choose to \"eat\" the\n                burger with the touch of a button and then it will move to the\n                \"devoured\" column. From there, you can say you are still hungry\n                and it will move the burger back to the \"Burgers To Be Eaten\"\n                column!{\" \"}\n              </p>\n              <p>\n                Technology: MVC paradigm, javascript, html, heroku, controllers,\n                config, css\n              </p>\n              <a href=\"https://evening-ravine-28370.herokuapp.com/\">\n                Deployed Website\n              </a>\n              <br></br>\n              <a href=\"https://github.com/CrystalWatkins/gt-hw-mvc-burger-app\">\n                Github Repo\n              </a>\n            </Figure>\n          </div>\n          <div className=\"col-sm-6\">\n            <Figure>\n              <Figure.Image\n                className=\"portfolio-pic\"\n                src=\"https://github.com/CrystalWatkins/Crystal-Watkins-Portfolio/blob/master/public/Images/reactportfolio.png?raw=true\"\n                rounded\n                alt=\"React User Directory\"\n              />\n              <Fade />\n              <figcaption>React user directory</figcaption>\n              <p>\n                Description:This is a homework requirement for GT Full Stack\n                Flex Program. We are using react to create an employee user\n                directory. When you click on the name, the list sorts\n                alphabetically by the first name. When you search, you receive\n                the search for the employee you searched. With more, the app\n                will be destructured to be more re-usable. This is calling on\n                the API random user.\n              </p>\n              <p>Technology: React</p>\n              <a href=\"https://crystalwatkins.github.io/gt-hw-react-user-directory-app/\">\n                Deployed Website\n              </a>\n              <br></br>\n              <a href=\"https://github.com/CrystalWatkins/gt-hw-react-user-directory-app\">\n                Github Repo\n              </a>\n            </Figure>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\" col-sm-12 jumbotron\">\n          <h1 class=\"contact\">Contact</h1>\n          <hr class=\"my-4\" />\n          <form>\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlInput1\">Name</label>\n            </div>\n          </form>\n          <input\n            type=\"name\"\n            class=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"John Smith\"\n          ></input>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlInput1\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              placeholder=\"example@gmail.com\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\">Message</label>\n            <textarea\n              class=\"form-control\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Message\"\n            ></textarea>\n          </div>\n          <button type=\"submit\" class=\"btn btn-secondary\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport \"./Footer.css\";\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n        <p>\n          &copy; Copyright\n        </p>\n      </footer>\n    );\n};\n\nexport default Footer;","import React from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport About from \"./components/About/About\";\nimport Portfolio from \"./components/Portfolio/Portfolio\";\nimport Contact from \"./components/Contact/Contact\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container-fluid\">\n        <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/portfolio\" component={Portfolio}></Route>\n          <Route path=\"/contact\" component={Contact}></Route>\n          <Route path=\"/about\" component={About}></Route>\n          <Route path=\"/\" component={About}></Route>\n        </Switch>\n        </Router>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}